<?php
// Exit if accessed directly
if( !defined( 'ABSPATH' ) ) {
	exit;
}

/**
 * Pro Functions
 *
 * Functions for the pro theme
 *
 * Please do not edit this file. This file is part of the CyberChimps Framework and all modifications
 * should be made in a child theme.
 *
 * @category Responsive Pro
 * @package  Responsive Pro
 * @since    1.0
 * @author   CyberChimps
 * @license  http://www.opensource.org/licenses/gpl-license.php GPL v2.0 (or later)
 * @link     http://www.cyberchimps.com/
 */


/**
 *
 * Load translations for Responsive Pro
 *
 */
function responsivepro_load_textdomain() {
	$domain = 'responsive';

	load_theme_textdomain( $domain, WP_LANG_DIR . '/responsivepro/' );
	load_theme_textdomain( $domain, get_stylesheet_directory() . '/pro/languages/' );
	load_theme_textdomain( $domain, get_template_directory() . '/pro/languages/' );

}

add_action( 'after_setup_theme', 'responsivepro_load_textdomain' );

/**
 *
 * Remove core options styling and add pro options styling
 *
 * @return null
 */
function responsive_pro_admin_enqueue_scripts( $hook_suffix ) {
	$template_directory_uri = get_template_directory_uri();

	wp_dequeue_style( 'responsive-theme-options' );
	wp_enqueue_style( 'responsive-pro-theme-options', $template_directory_uri . '/pro/options/lib/css/options.css', false, '1.0' );
	wp_enqueue_media();
	wp_enqueue_script( 'responsive-pro-options-js', $template_directory_uri . '/pro/options/lib/js/options-scripts.js', false, '1.0' );
}

add_action( 'admin_print_styles-appearance_page_theme_options', 'responsive_pro_admin_enqueue_scripts' );

/**
 * Enqueue responsive pro styles and scripts
 *
 * @return void
 */
function responsive_pro_scripts() {
	wp_enqueue_style( 'pro-css', get_template_directory_uri() . '/pro/lib/css/style.css', false, '1.0' );
	wp_enqueue_style( 'fontAwesome', get_template_directory_uri() . '/pro/lib/css/font-awesome.min.css', false, '1.0' );
}

add_action( 'wp_enqueue_scripts', 'responsive_pro_scripts' );

/**
 * Remove the cyberchimps upgrade bar from options
 */
remove_action( 'responsive_theme_options', 'responsive_upgrade_bar', 1 );

/**
 * Remove the options core header links
 */
remove_action( 'responsive_theme_options', 'responsive_theme_support', 2 );

/**
 * Print the option links to the options page header
 */
function responsive_pro_theme_support() {
	?>

	<div id="header-links-wrapper" class="grid col-940">
		<div class="header-links">

			<a class="button" href="<?php echo esc_url( 'http://cyberchimps.com/guides/r/' ); ?>" title="<?php esc_attr_e( 'Instructions', 'responsive' ); ?>" target="_blank">
				<?php _e( 'Instructions', 'responsive' ); ?></a>

			<a class="button button-primary" href="<?php echo esc_url( 'http://cyberchimps.com/forum/free/responsive/' ); ?>" title="<?php esc_attr_e( 'Help', 'responsive' ); ?>" target="_blank">
				<?php _e( 'Help', 'responsive' ); ?></a>

			<a class="button" href="<?php echo esc_url( 'https://webtranslateit.com/en/projects/6525-Responsive-Pro' ); ?>" title="<?php esc_attr_e( 'Translate', 'responsive' ); ?>" target="_blank">
				<?php _e( 'Translate', 'responsive' ); ?></a>

			<a class="button" href="<?php echo esc_url( 'http://cyberchimps.com/showcase/' ); ?>" title="<?php esc_attr_e( 'Showcase', 'responsive' ); ?>" target="_blank">
				<?php _e( 'Showcase', 'responsive' ); ?></a>

			<a class="button" href="<?php echo esc_url( 'http://cyberchimps.com/store/' ); ?>" title="<?php esc_attr_e( 'More Themes', 'responsive' ); ?>" target="_blank">
				<?php _e( 'More Themes', 'responsive' ); ?></a>

		</div>
	</div>

<?php
}

add_action( 'responsive_theme_options', 'responsive_pro_theme_support', 3 );

/**
 * Adds favicon to header
 */
function responsive_pro_favicon() {
	global $responsive_options;
	$favicon = ( isset( $responsive_options['favicon'] ) ) ? $responsive_options['favicon'] : false;

	if( $favicon && $favicon != '' ) : ?>
		<link rel="shortcut icon" href="<?php echo esc_url( $favicon ); ?>" type="image/x-icon"/>
	<?php
	endif;
}

add_action( 'wp_head', 'responsive_pro_favicon', 2 );
add_action( 'admin_head', 'responsive_pro_favicon', 2 );

// add apple touch icon
function responsive_pro_apple() {
	global $responsive_options;
	$apple = ( isset( $responsive_options['apple_touch_icon'] ) ) ? $responsive_options['apple_touch_icon'] : false;
	if( $apple && $apple != '' ): ?>
		<link rel="apple-touch-icon" href="<?php echo esc_url( $apple ); ?>"/>
	<?php
	endif;
}

add_action( 'wp_head', 'responsive_pro_apple', 2 );

/**
 * remove responsive free woocommerce wrappers
 */
remove_action( 'woocommerce_before_main_content', 'responsive_woocommerce_wrapper', 10 );
remove_action( 'woocommerce_after_main_content', 'responsive_woocommerce_wrapper_end', 10 );

/*
 * add responsive pro woocommerce wrappers
 */
add_action( 'woocommerce_before_main_content', 'responsive_pro_woocommerce_wrapper', 10 );
add_action( 'woocommerce_after_main_content', 'responsive_pro_woocommerce_wrapper_end', 10 );

/**
 * Creates starting woocommerce wrapper that allows the user to use the page
 * templates on the shop page. Not all page layouts work and will default to right
 * sidebar display
 */
function responsive_pro_woocommerce_wrapper() {
	$template_name = get_post_meta( get_option( 'woocommerce_shop_page_id' ), '_wp_page_template', true );

	switch( $template_name ) {
		case 'default':
			echo '<div id="content woocommerce" class="grid col-620">';
			break;
		case 'blog.php':
			echo '<div id="content-woocommerce" class="grid col-620">';
			break;
		case 'blog-excerpt.php':
			echo '<div id="content-woocommerce" class="grid col-620">';
			break;
		case 'content-sidebar-page.php':
			echo '<div id="content-woocommerce" class="grid col-620">';
			break;
		case 'content-sidebar-half-page.php':
			echo '<div id="content-woocommerce" class="grid col-460">';
			break;
		case 'full-width-page.php':
			echo '<div id="content-woocommerce" class="grid col-940">';
			break;
		case 'landing-page.php':
			echo '<div id="content-woocommerce" class="grid col-620">';
			break;
		case 'sidebar-content-page.php':
			echo '<div id="content-woocommerce" class="grid-right col-620 fit">';
			break;
		case 'sidebar-content-half-page.php':
			echo '<div id="content-woocommerce" class="grid-right col-460 fit">';
			break;
		case 'sitemap.php':
			echo '<div id="content-woocommerce" class="grid col-620">';
			break;
		default:
			echo '<div id="content-woocommerce" class="grid col-620">';
			break;
	}
}

/**
 * Creates ending woocommerce wrapper that allows the user to use the page
 * templates on the shop page. Not all page layouts work and will default to right
 * sidebar display
 */
function responsive_pro_woocommerce_wrapper_end() {
	echo '</div><!-- end of #content-woocommerce -->';
	$template_file = get_post_meta( get_option( 'woocommerce_shop_page_id' ), '_wp_page_template', true );
	$template_name = substr( $template_file, 0, -4 );
	switch( $template_name ) {
		case 'default':
			get_sidebar();
			break;
		case 'blog.php':
			get_sidebar();
			break;
		case 'blog-excerpt.php':
			get_sidebar();
			break;
		case 'content-sidebar-page.php':
			get_sidebar( 'right' );
			break;
		case 'content-sidebar-half-page.php':
			get_sidebar( 'right-half' );
			break;
		case 'full-width-page.php':
			break;
		case 'landing-page.php':
			get_sidebar();
			break;
		case 'sidebar-content-page.php':
			get_sidebar( 'left' );
			break;
		case 'sidebar-content-half-page.php':
			get_sidebar( 'left-half' );
			break;
		case 'sitemap.php':
			get_sidebar();
			break;
		default:
			get_sidebar();
			break;
	}
}

// Return value of the supplied responsive pro theme option.
function responsive_pro_get_option( $option, $default = false ) {
	global $responsive_options;

	// If the option is set then return it's value, otherwise return false.
	if( isset( $responsive_options[$option] ) ) {
		return $responsive_options[$option];
	}

	return $default;
}

//Prints HTML with meta information for the current post date/time.
if( !function_exists( 'responsive_pro_posted_on' ) ) {

	function responsive_pro_posted_on() {

		// Get value of post byline date toggle option from theme option for different pages
		if( is_single() ) {
			$show_date = responsive_pro_get_option( 'single_byline_date' );
		}
		elseif( is_archive() ) {
			$show_date = responsive_pro_get_option( 'archive_byline_date' );
		}
		else {
			$show_date = responsive_pro_get_option( 'blog_byline_date' );
		}

		$posted_on = sprintf( __( '<span class="posted-on-meta"><i class="fa fa-calendar" aria-hidden="true"></i><span class="%1$s">Posted on </span>%2$s', 'responsive' ),
				'meta-prep meta-prep-author posted',
				sprintf( '<a href="%1$s" title="%2$s" rel="bookmark"><span class="timestamp updated">%3$s</span></a></span>',
						 esc_url( get_permalink() ),
						 esc_attr( get_the_time() ),
						 esc_html( get_the_date() )
				)
		);

		// If post byline date toggle is on then print HTML for date link.
		if( $show_date ) {
			echo $posted_on;
		}
	}
}

// Prints HTML for author link of the post.
if( !function_exists( 'responsive_pro_posted_by' ) ) {
	function responsive_pro_posted_by() {

		// Get value of post byline author toggle option from theme option for different pages
		if( is_single() ) {
			$show_author = responsive_pro_get_option( 'single_byline_author' );
		}
		elseif( is_archive() ) {
			$show_author = responsive_pro_get_option( 'archive_byline_author' );
		}
		else {
			$show_author = responsive_pro_get_option( 'blog_byline_author' );
		}

		// Get url of all author archive( the page will contain all posts by the author).
		$auther_posts_url = esc_url( get_author_posts_url( get_the_author_meta( 'ID' ) ) );

		// Set author title text which will appear on hover over the author link.
		$auther_link_title = esc_attr( sprintf( __( 'View all posts by %s', 'responsive' ), get_the_author() ) );

		// Set the HTML for author link.
		$posted_by = '<span class="author-link byline">' . __( ' by ', 'responsive' ) . '<span class="author vcard"><a class="url fn n" href="' . $auther_posts_url . '" title="' . $auther_link_title . '" rel="author"> <span class="author-gravtar"> ' . get_avatar( get_the_author_meta( 'ID' ), 32) . ' </span>' . esc_html( get_the_author() ) . '</a></span></span>';

		// If post byline author toggle is on then print HTML for author link.
		if( $show_author ) {
			echo $posted_by;
		}
	}
}

//add meta entry category to single post, archive and blog list if set in options
if( !function_exists( 'responsive_pro_posted_in' ) ) {
	function responsive_pro_posted_in() {

		// Get value of post byline categories toggle option from theme option for different pages
		if( is_single() ) {
			$show_categories = responsive_pro_get_option( 'single_byline_categories' );
		}
		elseif( is_archive() ) {
			$show_categories = responsive_pro_get_option( 'archive_byline_categories' );
		}
		else {
			$show_categories = responsive_pro_get_option( 'blog_byline_categories' );
		}

		if( $show_categories ) {
			$categories_list = get_the_category_list( ', ' );
			if( $categories_list ) {
				$cats = sprintf( __( 'Posted in', 'responsive' ) . ' %1$s', $categories_list );
				?>
				<span class="cat-links">
					<?php echo $cats; ?>
				</span>
			<?php
			}
		}
	}
}

//add meta entry tags to single post, archive and blog list if set in options
if( !function_exists( 'responsive_pro_post_tags' ) ) {
	function responsive_pro_post_tags() {

		// Get value of post byline tags toggle option from theme option for different pages
		if( is_single() ) {
			$show_tags = responsive_pro_get_option( 'single_byline_tags' );
		}
		elseif( is_archive() ) {
			$show_tags = responsive_pro_get_option( 'archive_byline_tags' );
		}
		else {
			$show_tags = responsive_pro_get_option( 'blog_byline_tags' );
		}

		if( $show_tags ) {
			$tags_list = get_the_tag_list( '', ', ' );
			if( $tags_list ) {
				$tags = sprintf( __( 'Tags:', 'responsive' ) . ' %1$s', $tags_list );
				?>
				<span class="taglinks">
					<?php echo apply_filters( 'cyberchimps_post_tags', $tags ); ?>
				</span>
			<?php
			}
		}
	}
}

//add author bio to single posts, if single_byline_author_bio is set
if( !function_exists( 'responsive_pro_post_author_bio' ) ) {
	function responsive_pro_post_author_bio() {

		if( is_single() ) {
		
			$show_author_bio = responsive_pro_get_option( 'single_byline_author_bio' ); ?>
				<?php if( $show_author_bio && get_the_author_meta( 'description' ) ) : ?>
					<div class="single-author-bio">
						<?php echo __('About the Author', 'responsive'); ?>
						
						<hr />

						<span class="author-gravtar">
							<?php if( function_exists( 'get_avatar' ) ) {
								echo get_avatar( get_the_author_meta( 'ID' ), 70 );
							}
							?>
						</span>
						<span class="author-desc">
							<?php echo get_the_author_meta('description'); ?>
						</span>
						<hr />
					</div>
			
				<?php endif; // no description, no author's meta ?>
			
			<?php
		}
	}
}

//add meta entry comments count link to single post, archive and blog list if set in options
if( !function_exists( 'responsive_pro_comments_link' ) ) {
	function responsive_pro_comments_link() {

		// Get value of post byline tags toggle option from theme option for different pages
		if( is_single() ) {
			$show_comments_link = responsive_pro_get_option( 'single_byline_comments' );
		}
		elseif( is_archive() ) {
			$show_comments_link = responsive_pro_get_option( 'archive_byline_comments' );
		}
		else {
			$show_comments_link = responsive_pro_get_option( 'blog_byline_comments' );
		}

		if( $show_comments_link && comments_open() ) {
			?>
			<span class="comments-link">
				<span class="mdash"><i class="fa fa-comments" aria-hidden="true"></i></span>
				<?php comments_popup_link( __( 'No Comments &darr;', 'responsive' ), __( '1 Comment &darr;', 'responsive' ), __( '% Comments &darr;', 'responsive' ) ); ?>
			</span>
		<?php
		}
	}
}

// Display featured image if toggle is on.
if( !function_exists( 'responsive_pro_featured_image' ) ) {
	function responsive_pro_featured_image() {

		// Get value of post byline tags toggle option from theme option for different pages
		if( is_single() ) {
			$show_image = responsive_pro_get_option( 'single_featured_images' );
			$size = '';
			$attr = array();
		} elseif( is_archive() ) {
			$show_image = responsive_pro_get_option( 'archive_featured_images' );
			$size = 'thumbnail';
			$attr = array( 'class' => 'alignleft' );
		} else {
			$show_image = responsive_pro_get_option( 'blog_featured_images' );
			$size = '';
			$attr = array();
		}

		if( $show_image && has_post_thumbnail() ) {
			?>
			<div class="featured-image">
				<a href="<?php the_permalink(); ?>" title="<?php printf( esc_attr__( 'Permalink to %s', 'responsive' ), the_title_attribute( 'echo=0' ) ); ?>" rel="bookmark">
					<?php the_post_thumbnail( $size, $attr ); ?>
				</a>
			</div>
		<?php
		}
	}
}

// Set defaults of responsive pro theme options.
function responsive_pro_option_defaults( $defaults ) {
	$defaults['featured_area_layout']      = '';
	$defaults['blog_post_excerpts']        = 1;
	$defaults['blog_featured_images']      = 1;
	$defaults['blog_byline_author']        = 1;
	$defaults['blog_byline_categories']    = 1;
	$defaults['blog_byline_date']          = 1;
	$defaults['blog_byline_comments']      = 1;
	$defaults['blog_byline_tags']          = 1;
	$defaults['single_featured_images']    = 1;
	$defaults['single_byline_author']      = 1;
	$defaults['single_byline_categories']  = 1;
	$defaults['single_byline_date']        = 1;
	$defaults['single_byline_comments']    = 1;
	$defaults['single_byline_tags']        = 1;
	$defaults['archive_post_excerpts']     = 1;
	$defaults['archive_featured_images']   = 1;
	$defaults['archive_byline_author']     = 1;
	$defaults['archive_byline_categories'] = 1;
	$defaults['archive_byline_date']       = 1;
	$defaults['archive_byline_comments']   = 1;
	$defaults['archive_byline_tags']       = 1;
	$defaults['search_post_excerpts']      = 1;
	$defaults['font_size']                 = '14';
	$defaults['heading_colorpicker']       = '';
	$defaults['text_colorpicker']          = '';
	$defaults['link_colorpicker']          = '';
	$defaults['link_hover_colorpicker']    = '';
	$defaults['font_heading']              = 'Arial, Helvetica, sans-serif';
	$defaults['google_font_heading']       = '';
	$defaults['font_text']                 = 'Arial, Helvetica, sans-serif';
	$defaults['google_font_text']          = '';
	$defaults['skin']                      = 'default';
	$defaults['blog_post_title_text']      = 'Blog';

	return $defaults;
}

add_filter( 'responsive_option_defaults', 'responsive_pro_option_defaults' );

/**
 * This function adds theme's breadcrumb style for the required woocommerce pages.
 */
function responsive_woo_breadcrumbs( $defaults ) {

	$defaults['delimiter']   = ' <span class="chevron">&#8250;</span> ';
	$defaults['wrap_before'] = '<div class="breadcrumb-list">';
	$defaults['wrap_after']  = '</div>';

	return $defaults;

}

add_filter( 'woocommerce_breadcrumb_defaults', 'responsive_woo_breadcrumbs', 10, 1 );

/**
 * This function removes the bbpress breadcrumbs as they are duplicate to the themes breadcrumbs.
 */
function responsive_remove_bbp_breadcrumbs( $trail, $crumbs, $r ) {

	$crumbs = '';

	return $crumbs;

}

add_filter( 'bbp_get_breadcrumb', 'responsive_remove_bbp_breadcrumbs', 10, 3 );

/**
 * Creates an array with friendly font name and the param
 *
 * @param $font
 *
 * @return array
 */
function responsive_google_font( $font = '' ) {
	if( $font != '' ) {
		// Capitalize the first letter of each word to follow Google Font's naming convention
		$google['font']  = ucwords( $font );
		$google['param'] = trim( str_replace( ' ', '+', $google['font'] ) );

		return $google;
	}
	else {
		return null;
	}
}

// creates body styles from options
function responsive_customize_styles() {

	// get the options
	$responsive_options = responsive_get_options();

	// set the variables
	$font_size               = get_theme_mod( 'responsive_font_size' );
	$heading_color           = get_theme_mod( 'responsive_heading_colorpicker' );
	$text_color              = get_theme_mod( 'responsive_text_colorpicker' );
	$link_color              = get_theme_mod( 'responsive_link_colorpicker' );
	$link_hover_color        = get_theme_mod( 'responsive_link_hover_colorpicker' );
	$menu_gradients_checkbox = get_theme_mod( 'responsive_menu_gradients_checkbox' );
	$menu_background_color   = get_theme_mod( 'responsive_menu_background_colorpicker' );
	$menu_background_color_2  = get_theme_mod( 'responsive_menu_background_colorpicker_2' );
	$menu_background_color_2  = ( $menu_gradients_checkbox == 1 & $menu_background_color_2 != '' ? $menu_background_color_2 : $menu_background_color );
	$menu_text_color         = get_theme_mod( 'responsive_menu_text_colorpicker' );
	$menu_text_hover_color   = get_theme_mod( 'responsive_menu_text_hover_colorpicker' );
	$menu_item_color         = get_theme_mod( 'responsive_menu_item_colorpicker' );
	$menu_item_hover_color   = get_theme_mod( 'responsive_menu_item_hover_colorpicker' );
	$font_heading            = get_theme_mod( 'responsive_font_heading' );
	$google_font_heading     = ( get_theme_mod( 'responsive_google_font_heading' ) != '' ) ? responsive_google_font( get_theme_mod( 'responsive_google_font_heading' ) ) : '';
	$font_text             = get_theme_mod( 'responsive_font_text' );
	$google_font_text      = ( get_theme_mod( 'responsive_google_font_text' ) != '' ) ? responsive_google_font( get_theme_mod( 'responsive_google_font_text' ) ) : '';

	// create a string to add to the google font stylesheet call
	$google_param = ( $google_font_heading != '' ) ? $google_font_heading['param'] : '';
	$google_param .= ( $google_font_heading != '' && $google_font_text != '' ) ? '|' : '';
	$google_param .= ( $google_font_text != '' ) ? $google_font_text['param'] : '';

	if( $google_font_heading != '' && $font_heading == 'google' || $google_font_text != '' && $font_text == 'google' ) {
		?>
		<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=<?php echo $google_param; ?>">
	<?php
	}?>
	<style type="text/css" id="customizer_styles">
		<?php
		/**
		 * Body styles
		 */
		?>
		body {
		<?php
		if( $text_color != '' ) {?> color: <?php echo esc_html( $text_color ); ?>;
		<?php }
		if( $font_text != 'google' ) { ?> font-family: <?php echo esc_html( $font_text ); ?>;
		<?php }
		elseif( $google_font_text != '' ) {?> font-family: '<?php echo esc_html( $google_font_text['font'] ); ?>';
		<?php }
		if( $font_size != '' ) {?> font-size: <?php echo absint( $font_size ); ?>px;
		<?php } ?>
		}

		<?php
		/**
		 * Heading styles
		 */
		if( $heading_color != '' || $google_font_heading != '' || $font_heading != '' ) { ?>
		h1, h2, h3, h4, h5, h6, .widget-title h3 {
		<?php
		if( $heading_color != '' ) { ?> color: <?php echo esc_html( $heading_color ); ?>;
		<?php
		}
		if( $font_heading != 'google' ) { ?> font-family: <?php echo esc_html( $font_heading ); ?>;
		<?php
		}
		elseif( $google_font_heading != '' ) {?> font-family: '<?php echo esc_html( $google_font_heading['font'] ); ?>';
		<?php } ?>
		}

		<?php }
		/**
		 * Link Styles
		 */
		if( $link_color != '' ) { ?>
		a {
			color: <?php echo esc_html( $link_color ); ?>;
		}

		<?php }
		if( $link_hover_color != '' ) { ?>
		a:hover {
			color: <?php echo esc_html( $link_hover_color ); ?>;
		}


		<?php }
		/**
		 * Menu Background Styles
		 */
		if( $menu_background_color != '' ) { ?>
		.menu {
			background-color: <?php echo esc_html( $menu_background_color ); ?>;
			background-image: -webkit-gradient(linear, left top, left bottom, from(<?php echo esc_html( $menu_background_color ); ?>), to(<?php echo esc_html( $menu_background_color_2 ); ?>));
			background-image: -webkit-linear-gradient(top, <?php echo esc_html( $menu_background_color ); ?>, <?php echo esc_html( $menu_background_color_2 ); ?>);
			background-image: -moz-linear-gradient(top, <?php echo esc_html( $menu_background_color ); ?>, <?php echo esc_html( $menu_background_color_2 ); ?>);
			background-image: -ms-linear-gradient(top, <?php echo esc_html( $menu_background_color ); ?>, <?php echo esc_html( $menu_background_color_2 ); ?>);
			background-image: -o-linear-gradient(top, <?php echo esc_html( $menu_background_color ); ?>, <?php echo esc_html( $menu_background_color_2 ); ?>);
			background-image: linear-gradient(top, <?php echo esc_html( $menu_background_color ); ?>, <?php echo esc_html( $menu_background_color_2 ); ?>);
			filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=<?php echo esc_html( $menu_background_color ); ?>, endColorstr=<?php echo esc_html( $menu_background_color_2 ); ?>);
		}
		@media screen and (max-width: 650px) {
			.js .main-nav {
				background-color: <?php echo esc_html( $menu_background_color ); ?>;
				background-image: -webkit-gradient(linear, left top, left bottom, from(<?php echo esc_html( $menu_background_color ); ?>), to(<?php echo esc_html( $menu_background_color_2 ); ?>));
				background-image: -webkit-linear-gradient(top, <?php echo esc_html( $menu_background_color ); ?>, <?php echo esc_html( $menu_background_color_2 ); ?>);
				background-image: -moz-linear-gradient(top, <?php echo esc_html( $menu_background_color ); ?>, <?php echo esc_html( $menu_background_color_2 ); ?>);
				background-image: -ms-linear-gradient(top, <?php echo esc_html( $menu_background_color ); ?>, <?php echo esc_html( $menu_background_color_2 ); ?>);
				background-image: -o-linear-gradient(top, <?php echo esc_html( $menu_background_color ); ?>, <?php echo esc_html( $menu_background_color_2 ); ?>);
				background-image: linear-gradient(top, <?php echo esc_html( $menu_background_color ); ?>, <?php echo esc_html( $menu_background_color_2 ); ?>);
				filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=<?php echo esc_html( $menu_background_color ); ?>, endColorstr=<?php echo esc_html( $menu_background_color_2 ); ?>);
			}
		}

		<?php }
		/**
		 * Menu Text Color
		 */
		if( $menu_text_color != '' ) { ?>
			.menu a {
				color: <?php echo esc_html( $menu_text_color ); ?>;
			}

		<?php }
		/**
		 * Menu Text Hover Color
		 */
		if( $menu_text_hover_color != '' ) { ?>
			.menu a:hover {
				color: <?php echo esc_html( $menu_text_hover_color ); ?>;
			}

		<?php }
		/**
		 * Menu Item Styles
		 */
		if( $menu_item_color != '' ) { ?>
			.menu a {
				border-left: 1px solid <?php echo esc_html( $menu_item_color ); ?>;
				text-shadow: 0 -1px 0 <?php echo esc_html( $menu_item_color ); ?>;
			}

		<?php }
		/**
		 * Menu Item Styles
		 */
		if( $menu_item_hover_color != '' ) { ?>
			.menu a:hover,
			ul.menu > li:hover,
			.menu .current_page_item a,
			.menu .current-menu-item a,
			.front-page .menu .current_page_item a {
				background: <?php echo esc_html( $menu_item_hover_color ); ?>;
				background-image: none;
				filter: none;
			}

		<?php }
		/**
		 * Buttons
		 */
		if( $font_text != '' ) { ?>
		input[type='reset'], input[type='button'], input[type='submit'] {
		<?php
			if( $font_text != 'google' ) { ?> font-family: <?php echo esc_html( $font_text ); ?>;
		<?php }
			elseif( $google_font_text != '' ) {?> font-family: '<?php echo esc_html( $google_font_text['font'] ); ?>';
		<?php
			}?>
		}

		<?php
	}?>
	</style>
<?php
}

add_action( 'wp_head', 'responsive_customize_styles', 100 );

/**
 * Create stylesheet for skins
 *
 */
function responsive_pro_skin() {
	// Get skin option
	$skin = get_theme_mod( 'responsive_skin', 'default' );

	if( $skin && $skin != 'default' ) {
		wp_enqueue_style( 'responsive-pro-skin', get_template_directory_uri() . '/pro/lib/css/skins/' . urlencode( $skin ) . '.css', false, '1.0' );
	}
}

add_action( 'wp_enqueue_scripts', 'responsive_pro_skin' );

/**
 * Add custom mobile menu title to header
 */
if( !function_exists( 'responsive_custom_mobile_menu_title' ) ) :
	function responsive_custom_mobile_menu_title() {

		global $responsive_options;

		if( isset( $responsive_options['custom_mobile_menu_title'] ) && $responsive_options['custom_mobile_menu_title'] != '' ) {
			echo '<span class="custom-mobile-menu-title">' . esc_html( $responsive_options['custom_mobile_menu_title'] ) . '</span>';
		}

	}
endif;

add_action( 'responsive_header_bottom', 'responsive_custom_mobile_menu_title' );

// Excerpt more text.
function responsive_pro_excerpt_more_text( $more ) {
	global $post;

	// Get the excerpt more text from option.
	$text = responsive_pro_get_option( 'excerpts_text', __( 'Read more &#8250;', 'responsive' ) );
	$text = $text == '' ? __( 'Read more &#8250;', 'responsive' ) : $text;

	$more = '<span class="ellipsis">&hellip;</span><p><a class="excerpt-more blog-excerpt" href="' . get_permalink( $post->ID ) . '">' . esc_html( $text ) . '</a></p>';

	return $more;

}

// Excerpt more length.
function responsive_pro_excerpt_more_length( $length ) {
	global $post;

	// Get the excerpt more length from option.
	$length = responsive_pro_get_option( 'excerpts_length', 50 );
	$length = $length == "" ? 50 : $length;

	return $length;
}

/**
 * Add link to theme options in Admin bar. Only if the MP6 plugin is not installed as it ruins the responsiveness at mobile level
 * TODO fix menu option to be responsive
 */
function responsive_pro_admin_bar_link() {
	$installed_plugins = get_plugins();
	if( ! isset( $installed_plugins['mp6/mp6.php'])) {
	global $wp_admin_bar;

	$wp_admin_bar->add_menu( array(
								 'id'    => 'responsive_pro_theme_option',
								 'title' => __( 'Responsive Pro Options', 'responsive' ),
								 'href'  => admin_url( 'themes.php?page=theme_options' )
							 ) );
	}
}

/**
 * Add admin_bar_menu hook inside admin_init so that it will not affect the frontend admin bar.
 */
function responsive_pro_init_admin_bar_menu() {
	if ( ! current_user_can('manage_options') ) {
		add_action( 'admin_bar_menu', 'responsive_pro_admin_bar_link', 133 );
	}
}

add_action( 'admin_init', 'responsive_pro_init_admin_bar_menu' );

/**
 * Get valid layouts
 */
function responsive_get_valid_featured_area_layouts() {
	$layouts = array(
		'default'            => __( 'Default', 'responsive' ),
		'reverse'            => __( 'Reverse', 'responsive' ),
		'full-width'         => __( 'Full Width', 'responsive' ),
		'full-width-reverse' => __( 'Full Width Reverse', 'responsive' )
	);

	return apply_filters( 'responsive_featured_area_valid_layouts', $layouts );
}


function responsive_install_plugins_2() {
	$plugins = array(

		// This is an example of how to include a plugin pre-packaged with a theme
		array(
			'name'     => 'SlideDeck Personal', // The plugin name
			'slug'     => 'slidedeck3-personal', // The plugin slug (typically the folder name)
			'source' => get_template_directory() . '/pro/inc/plugins/slidedeck3-personal.zip',
			'required' => false,
			'force_activation' => false,
			'force_deactivation' => false
		)
	);

	// Change this to your theme text domain, used for internationalising strings
	$theme_text_domain = 'responsive';

	/**
	 * Array of configuration settings. Amend each line as needed.
	 * If you want the default strings to be available under your own theme domain,
	 * leave the strings uncommented.
	 * Some of the strings are added into a sprintf, so see the comments at the
	 * end of each line for what each argument will be.
	 */

	$config = array(
		'domain'           => $theme_text_domain, // Text domain - likely want to be the same as your theme.
		'default_path'     => '', // Default absolute path to pre-packaged plugins
		'parent_menu_slug' => 'themes.php', // Default parent menu slug
		'parent_url_slug'  => 'themes.php', // Default parent URL slug
		'menu'             => 'install-responsive-addons', // Menu slug
		'has_notices'      => true, // Show admin notices or not
		'is_automatic'     => true, // Automatically activate plugins after installation or not
		'message'          => '', // Message to output right before the plugins table
		'strings'          => array(
			'page_title'                      => __( 'Responsive Add Features', 'responsive' ),
			'menu_title'                      => __( 'Activate Add Ons', 'responsive' ),
			'installing'                      => __( 'Installing Plugin: %s', 'responsive' ), // %1$s = plugin name
			'oops'                            => __( 'Something went wrong with the plugin API.', 'responsive' ),
			'notice_can_install_required'     => _n_noop( 'This theme requires the following plugin: %1$s.', 'This theme requires the following plugins: %1$s.', 'responsive' ), // %1$s = plugin name(s)
			'notice_can_install_recommended'  => _n_noop( 'This theme recommends the following plugin: %1$s.', 'This theme recommends the following plugins: %1$s.', 'responsive' ), // %1$s = plugin name(s)
			'notice_cannot_install'           => _n_noop( 'Sorry, but you do not have the correct permissions to install the %s plugin. Contact the administrator of this site for help on getting the plugin installed.', 'Sorry, but you do not have the correct permissions to install the %s plugins. Contact the administrator of this site for help on getting the plugins installed.', 'responsive' ), // %1$s = plugin name(s)
			'notice_can_activate_required'    => _n_noop( 'The following required plugin is currently inactive: %1$s.', 'The following required plugins are currently inactive: %1$s.', 'responsive' ), // %1$s = plugin name(s)
			'notice_can_activate_recommended' => _n_noop( 'The following recommended plugin is currently inactive: %1$s.', 'The following recommended plugins are currently inactive: %1$s.', 'responsive' ), // %1$s = plugin name(s)
			'notice_cannot_activate'          => _n_noop( 'Sorry, but you do not have the correct permissions to activate the %s plugin. Contact the administrator of this site for help on getting the plugin activated.', 'Sorry, but you do not have the correct permissions to activate the %s plugins. Contact the administrator of this site for help on getting the plugins activated.', 'responsive' ), // %1$s = plugin name(s)
			'notice_ask_to_update'            => _n_noop( 'The following plugin needs to be updated to its latest version to ensure maximum compatibility with this theme: %1$s.', 'The following plugins need to be updated to their latest version to ensure maximum compatibility with this theme: %1$s.', 'responsive' ), // %1$s = plugin name(s)
			'notice_cannot_update'            => _n_noop( 'Sorry, but you do not have the correct permissions to update the %s plugin. Contact the administrator of this site for help on getting the plugin updated.', 'Sorry, but you do not have the correct permissions to update the %s plugins. Contact the administrator of this site for help on getting the plugins updated.', 'responsive' ), // %1$s = plugin name(s)
			'install_link'                    => _n_noop( 'Begin installing plugin', 'Begin installing plugins', 'responsive' ),
			'activate_link'                   => _n_noop( 'Activate installed plugin', 'Activate installed plugins', 'responsive' ),
			'return'                          => __( 'Return to Required Plugins Installer', 'responsive' ),
			'plugin_activated'                => __( 'Plugin activated successfully.', 'responsive' ),
			'complete'                        => __( 'All plugins installed and activated successfully. %s', 'responsive' ) // %1$s = dashboard link
		)
	);

	global $pagenow;
	// Add plugin notification only if the current user is admin and on theme.php
	if ( current_user_can( 'manage_options' ) && 'themes.php' == $pagenow ) {
		tgmpa( $plugins, $config );
	}

}
add_action( 'tgmpa_register', 'responsive_install_plugins_2' );


add_filter( 'body_class', 'add_site_layout_classes' );

function add_site_layout_classes( $classes ){

	global $responsive_options;

	if ( !empty( $responsive_options['site_layout_option'] ) ) :

		$classes[] = $responsive_options['site_layout_option'];
		
	endif;

	return $classes;

}

add_action( 'responsive_entry_after', 'add_divider_below_post' );

if( !function_exists('add_divider_below_post') ) :

	function add_divider_below_post() {

		if( !is_single() ) {
			echo '<hr class="end-of-post-divider" />';
		}
	}

endif;

if( !function_exists('responsivepro_get_social_icons') ) :

	function responsivepro_get_social_icons( $design_type ) {

		$responsive_options = responsive_get_options();

		$sites = array (
			'twitter'	=> array(
							'class-name'	=> 'twitter',
							'label-text'	=> __( 'Twitter', 'responsive' )
							),
			'facebook'	=> array(
							'class-name'	=> 'facebook',
							'label-text'	=> __( 'Facebook', 'responsive' )
							),
			'linkedin'	=> array(
							'class-name'	=> 'linkedin',
							'label-text'	=> __( 'LinkedIn', 'responsive' )
							),
			'youtube'	=> array(
							'class-name'	=> 'youtube',
							'label-text'	=> __( 'YouTube', 'responsive' )
							),
			'stumbleupon'	=> array(
							'class-name'	=> 'stumbleupon',
							'label-text'	=> __( 'StumbleUpon', 'responsive' )
							),
			'rss'	=> array(
							'class-name'	=> 'rss',
							'label-text'	=> __( 'RSS', 'responsive' )
							),
			'google_plus'	=> array(
							'class-name'	=> 'google-plus-official',
							'label-text'	=> __( 'Google Plus', 'responsive' )
							),
			'instagram'	=> array(
							'class-name'	=> 'instagram',
							'label-text'	=> __( 'Instagram', 'responsive' )
							),
			'pinterest'	=> array(
							'class-name'	=> 'pinterest',
							'label-text'	=> __( 'Pinterest', 'responsive' )
							),
			'yelp'	=> array(
							'class-name'	=> 'yelp',
							'label-text'	=> __( 'Yelp', 'responsive' )
							),
			'vimeo'	=> array(
							'class-name'	=> 'vimeo',
							'label-text'	=> __( 'Vimeo', 'responsive' )
							),
			'foursquare'	=> array(
							'class-name'	=> 'foursquare',
							'label-text'	=> __( 'Foursquare', 'responsive' )
							)
			);

		$html = '<ul class="social-icons">';

		foreach( $sites as $key => $value ) {
			if ( !empty( $responsive_options[$key . '_uid'] ) ) {
			
				$html .= '<li class="' . esc_attr( $key ) . '-icon symbol ' . esc_attr( $design_type) . '"><a href="' . $responsive_options[$key . '_uid'] . '" title="' . esc_attr( $value['label-text'] ) . '">' . '<i class="fa fa-' . esc_attr( $value['class-name'] ) . '"></i></a></li>';
			}
		}

		$html .= '</ul><!-- .social-icons -->';

		return apply_filters( 'responsivepro_social_icons', $html );
	}

endif;
